{"pageProps":{"note":{"id":"otOStVR8koAMXnsbNJh0a","title":"Image Based Lighting","desc":"","updated":1647310836393,"created":1640019259775,"custom":{},"fname":"rendering.filament.image-based-lighting","type":"note","vault":{"fsPath":"vault"},"contentHash":"454897d45ad34896a4c59dd73989b813","links":[],"anchors":{"primitives":{"type":"header","text":"Primitives","value":"primitives","line":9,"column":0,"depth":2},"image-based-lighting-for-physical-based-rendering":{"type":"header","text":"Image based lighting for physical based rendering","value":"image-based-lighting-for-physical-based-rendering","line":25,"column":0,"depth":2},"filament-ibl-requirements":{"type":"header","text":"Filament IBL Requirements","value":"filament-ibl-requirements","line":47,"column":0,"depth":2}},"children":[],"parent":"ayde1g7v3mqg1fkjvwrqmzx","data":{}},"body":"<h1 id=\"image-based-lighting\"><a aria-hidden=\"true\" class=\"anchor-heading\" href=\"#image-based-lighting\"><svg aria-hidden=\"true\" viewBox=\"0 0 16 16\"><use xlink:href=\"#svg-link\"></use></svg></a>Image Based Lighting</h1>\n<blockquote>\n<p>Reference: <a href=\"https://google.github.io/filament/Filament.html#lighting/imagebasedlights/processinglightprobes\">https://google.github.io/filament/Filament.html#lighting/imagebasedlights/processinglightprobes</a></p>\n</blockquote>\n<h2 id=\"primitives\"><a aria-hidden=\"true\" class=\"anchor-heading\" href=\"#primitives\"><svg aria-hidden=\"true\" viewBox=\"0 0 16 16\"><use xlink:href=\"#svg-link\"></use></svg></a>Primitives</h2>\n<p><strong>Environment mapping(reflection mapping)</strong>: method for producing environment based reflections on surfaces of reflective objects</p>\n<p><strong>Environment map</strong>: image representation of the environment surrounding a point in a scene, can be further processed to shade object based on surrounding lighting conditions in image based lighting</p>\n<p><strong>Cube (environment) map</strong>: a type of environment map, a texture that contains 6 individual 2D textures that each form one side of a cube</p>\n<p><strong>Image based lighting (IBL)</strong>: a technique for environment based lighting that efficiently computes lighting while shading objects with the utilization of pre-processed environment map</p>\n<p><strong>Incident light</strong>: light falls on object's surface</p>\n<p><strong>Irradiance</strong>: the contribution of the whole environment light to a given point on the object's surface </p>\n<p><strong>Radiance</strong>: the resulting light bouncing off of the object</p>\n<h2 id=\"image-based-lighting-for-physical-based-rendering\"><a aria-hidden=\"true\" class=\"anchor-heading\" href=\"#image-based-lighting-for-physical-based-rendering\"><svg aria-hidden=\"true\" viewBox=\"0 0 16 16\"><use xlink:href=\"#svg-link\"></use></svg></a>Image based lighting for physical based rendering</h2>\n<p><strong>Rendering equation</strong>:</p>\n<p>Outgoing radiance = incoming radiance + integration of the surface response for incident light from a single direction over entire hemisphere</p>\n<p><strong>Bidirectional Reflectance Distribution Function (BRDF)</strong> describe surface response of a standard function over two terms:</p>\n<ul>\n<li>diffuse component </li>\n<li>specular component </li>\n</ul>\n<p><strong>Diffuse computation (invariant to view angle)</strong>: irradiance map + spherical harmonics</p>\n<p>Irradiance integral is precomputed using Lambertian BRDF and stored into a <strong>cubemap</strong>. It can be approximated using spherical harmonics decomposition for cheap runtime calculation</p>\n<p><strong>Specular computation</strong>: pre-filtered importance sampling + split-sum approximation</p>\n<p>Radiance integral = [DFG1(n.dot(v), a) + DFG2(n.dot(v), a)] x LD(n, a)</p>\n<p>where, n is surface normal vector, v is viewing vector, a relates to perceptual roughness</p>\n<p>DFG1 and DFG2 can be pre-calculated in a 2D texture or analytically approximated at runtime (on android); LD can be stored in <strong>mipmaped cubemaps</strong> (more rough, more blur)</p>\n<h2 id=\"filament-ibl-requirements\"><a aria-hidden=\"true\" class=\"anchor-heading\" href=\"#filament-ibl-requirements\"><svg aria-hidden=\"true\" viewBox=\"0 0 16 16\"><use xlink:href=\"#svg-link\"></use></svg></a>Filament IBL Requirements</h2>\n<p>Indirect light reflection requires (log2(width) + 1) levels mip-mapped <strong>cubemap</strong> generated by cmgen, or prefiltered with <a href=\"https://github.com/google/filament/blob/main/filament/include/filament/Texture.h#L468\">generatePrefilterMipmap (cpu)</a> or <a href=\"https://github.com/google/filament/tree/main/libs/iblprefilter\">libibl (gpu)</a>, with each cubemap encodes the irradiance for a roughness level</p>","noteIndex":{"id":"o3PkEany5FTDLokev2jkJ","title":"Root","desc":"","updated":1656832289330,"created":1640014633146,"custom":{"nav_order":0,"permalink":"/"},"fname":"root","type":"note","vault":{"fsPath":"vault"},"contentHash":"1f4a8dbd787743b10f24422968be02a9","links":[],"anchors":{"history":{"type":"header","text":"History","value":"history","line":10,"column":0,"depth":2},"disclaimer":{"type":"header","text":"Disclaimer","value":"disclaimer","line":15,"column":0,"depth":2}},"children":["Vn1Ykq4aIagi0bhZowkgD","ja5HFaIxVEtbZoTklNXfZ","vnzxfoqb6aqbrqy247uonqo","jjlv4wd30bvf0r680o9ptbi","kok8aerdrzko8v4i6w6qtjx","hr8ruqfxd2miwldyehzz5zy","criy8usqjrguecufwb3k8z2","3x9f9wclumzxc23dzgraepy","sma2hkp8hvq9urmtk94qqwq","4bcvwahaynsox941d8dimxw","8u19znq05xj50ptse0fq8nj","hbcft05imtwxxtwk52nij1n","2vmt81onv3jf06ejwfusj30","npuhs4xvm0sa31rz2gcuff3","mwt2mrjm58oa3q2osoqwd64","yjnf5fuac95jbdmjj923hyh","17p3nbv4rvga83hhsz2idzp","8r1egy8mz3lp7ud9p8kcg8z","5gf8xb68r1y0kxumkvvmuez","d92qhaqtfbt7e4eximdnbht","r25bm5nuug9krur6ddqearm"],"parent":null,"data":{},"body":"\nMy personal knowledge cache using [Dendron](https://www.dendron.so)\n\n## History\nIt was during my first job, at the start-up company called PixelShift.AI, that I acquired most prominent skill as a software engineer-the ability to read source code. It opened up a new way of learning and my knowledge expanded rapidly ever since. Learning new things is thriving but noting them down cogently and organized is hard. I often found myself forget the context few month later, making the notes completely intelligible. Additionally, some notes need frequent update as my previous understanding could be parochial, antiquated or even erroneous.\n\nIn desperate attempt to facilitate the noting/updating experience, I came across [Dendron](https://www.dendron.so) and found it surprisingly congenial to my personal need. With it, I have gradually grown the habit of caching, linking back and extending my knowledge base.\n\n## Disclaimer\nThe notes are collections of information I found along the journey. I use backquote to denote sources, but I am likely to miss some references, so apology in advance. Also, they are my personal understandings, usually added when I first encounter the topic and will be updated only when I come across it again, so some of them could be incomplete or wrong."},"collectionChildren":null,"customHeadContent":null,"config":{"version":5,"dev":{"enablePreviewV2":true},"commands":{"lookup":{"note":{"selectionMode":"extract","confirmVaultOnCreate":false,"leaveTrace":false,"bubbleUpCreateNew":true,"fuzzThreshold":0.2,"vaultSelectionModeOnCreate":"smart"}},"randomNote":{},"insertNote":{"initialValue":"templates"},"insertNoteLink":{"aliasMode":"none","enableMultiSelect":false},"insertNoteIndex":{"enableMarker":false},"copyNoteLink":{},"templateHierarchy":"template"},"workspace":{"vaults":[{"fsPath":"vault"}],"journal":{"dailyDomain":"daily","name":"journal","dateFormat":"y.MM.dd","addBehavior":"childOfDomain"},"scratch":{"name":"scratch","dateFormat":"y.MM.dd.HHmmss","addBehavior":"asOwnDomain"},"task":{"name":"","dateFormat":"","addBehavior":"childOfCurrent","statusSymbols":{"":" ","wip":"w","done":"x","assigned":"a","moved":"m","blocked":"b","delegated":"l","dropped":"d","pending":"y"},"prioritySymbols":{"H":"high","M":"medium","L":"low"},"todoIntegration":false,"createTaskSelectionType":"selection2link","taskCompleteStatus":["done","x"]},"graph":{"zoomSpeed":1,"createStub":false},"enableAutoCreateOnDefinition":false,"enableXVaultWikiLink":false,"enableRemoteVaultInit":true,"enableUserTags":true,"enableHashTags":true,"workspaceVaultSyncMode":"noCommit","enableAutoFoldFrontmatter":false,"enableEditorDecorations":true,"maxPreviewsCached":10,"maxNoteLength":204800,"dendronVersion":"0.86.1","enableFullHierarchyNoteTitle":false,"enableHandlebarTemplates":false,"templateHierarchy":"template"},"preview":{"enableFMTitle":true,"enableNoteTitleForLink":true,"enableMermaid":true,"enablePrettyRefs":true,"enableKatex":true,"automaticallyShowPreview":false,"enableFrontmatterTags":true,"enableHashesForFMTags":false},"publishing":{"enableFMTitle":true,"enableNoteTitleForLink":true,"enableMermaid":true,"enablePrettyRefs":true,"enableKatex":true,"copyAssets":true,"siteHierarchies":["root"],"enableSiteLastModified":true,"siteRootDir":"docs","enableFrontmatterTags":true,"enableHashesForFMTags":false,"enableRandomlyColoredTags":true,"duplicateNoteBehavior":{"action":"useVault","payload":["vault"]},"writeStubs":false,"seo":{"title":"Dendron","description":"Personal knowledge space"},"github":{"enableEditLink":true,"editLinkText":"Edit this page on GitHub","editBranch":"main","editViewMode":"tree"},"enablePrettyLinks":true,"assetsPrefix":"/my-personal-knowledge-cache","siteUrl":"https://ankbzpx.github.io","enableTaskNotes":true,"siteFaviconPath":"favicon.ico","siteIndex":"root"}}},"__N_SSG":true}