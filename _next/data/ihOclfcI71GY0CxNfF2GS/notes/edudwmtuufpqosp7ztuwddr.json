{"pageProps":{"note":{"id":"edudwmtuufpqosp7ztuwddr","title":"Normal Vector","desc":"","updated":1647583831269,"created":1646974566576,"custom":{},"fname":"code-read.igl.normal-vector","type":"note","vault":{"fsPath":"vault"},"contentHash":"63bee6a869ee0b6b43293b04f8e7209a","links":[{"type":"wiki","from":{"fname":"code-read.igl.normal-vector","id":"edudwmtuufpqosp7ztuwddr","vaultName":"vault"},"value":"coding.blender.python-api","alias":"Smooth shading in Blender","position":{"start":{"line":50,"column":34,"offset":1102},"end":{"line":50,"column":98,"offset":1166},"indent":[]},"xvault":false,"sameFile":false,"to":{"fname":"coding.blender.python-api","anchorHeader":"mesh-ops"}},{"type":"wiki","from":{"fname":"code-read.igl.normal-vector","id":"edudwmtuufpqosp7ztuwddr","vaultName":"vault"},"value":"code-read.igl.neighbourhood-connectivity","alias":"vertex_triangle_adjacency Unrolled","position":{"start":{"line":55,"column":7,"offset":1324},"end":{"line":55,"column":95,"offset":1412},"indent":[]},"xvault":false,"sameFile":false,"to":{"fname":"code-read.igl.neighbourhood-connectivity","anchorHeader":"unrolled"}}],"anchors":{"concepts":{"type":"header","text":"Concepts","value":"concepts","line":9,"column":0,"depth":2},"normal-vector":{"type":"header","text":"Normal Vector","value":"normal-vector","line":10,"column":0,"depth":3},"tangent-vector":{"type":"header","text":"Tangent Vector","value":"tangent-vector","line":12,"column":0,"depth":3},"degenerated-normal-vector":{"type":"header","text":"Degenerated Normal Vector","value":"degenerated-normal-vector","line":14,"column":0,"depth":3},"implementations":{"type":"header","text":"Implementations","value":"implementations","line":17,"column":0,"depth":2},"per_face_normals":{"type":"header","text":"per_face_normals","value":"per_face_normals","line":19,"column":0,"depth":3},"per_vertex_normals":{"type":"header","text":"per_vertex_normals","value":"per_vertex_normals","line":35,"column":0,"depth":3},"per_corner_normals":{"type":"header","text":"per_corner_normals","value":"per_corner_normals","line":58,"column":0,"depth":3},"vertex-shader":{"type":"header","text":"Vertex Shader","value":"vertex-shader","line":71,"column":0,"depth":3},"todo":{"type":"header","text":"TODO","value":"todo","line":102,"column":0,"depth":2}},"children":[],"parent":"40bub3uyyulxmaw57e9ntnv","data":{}},"body":"<h1 id=\"normal-vector\"><a aria-hidden=\"true\" class=\"anchor-heading\" href=\"#normal-vector\"><svg aria-hidden=\"true\" viewBox=\"0 0 16 16\"><use xlink:href=\"#svg-link\"></use></svg></a>Normal Vector</h1>\n<h2 id=\"concepts\"><a aria-hidden=\"true\" class=\"anchor-heading\" href=\"#concepts\"><svg aria-hidden=\"true\" viewBox=\"0 0 16 16\"><use xlink:href=\"#svg-link\"></use></svg></a>Concepts</h2>\n<h3 id=\"normal-vector-1\"><a aria-hidden=\"true\" class=\"anchor-heading\" href=\"#normal-vector-1\"><svg aria-hidden=\"true\" viewBox=\"0 0 16 16\"><use xlink:href=\"#svg-link\"></use></svg></a>Normal Vector</h3>\n<p>Normal Vector at a point is the cross product of two tangent vectors at that point.</p>\n<h3 id=\"tangent-vector\"><a aria-hidden=\"true\" class=\"anchor-heading\" href=\"#tangent-vector\"><svg aria-hidden=\"true\" viewBox=\"0 0 16 16\"><use xlink:href=\"#svg-link\"></use></svg></a>Tangent Vector</h3>\n<p>A vector tangents to a surface at a given point</p>\n<h3 id=\"degenerated-normal-vector\"><a aria-hidden=\"true\" class=\"anchor-heading\" href=\"#degenerated-normal-vector\"><svg aria-hidden=\"true\" viewBox=\"0 0 16 16\"><use xlink:href=\"#svg-link\"></use></svg></a>Degenerated Normal Vector</h3>\n<p>two tangent vectors are linear depend</p>\n<h2 id=\"implementations\"><a aria-hidden=\"true\" class=\"anchor-heading\" href=\"#implementations\"><svg aria-hidden=\"true\" viewBox=\"0 0 16 16\"><use xlink:href=\"#svg-link\"></use></svg></a>Implementations</h2>\n<h3 id=\"per_face_normals\"><a aria-hidden=\"true\" class=\"anchor-heading\" href=\"#per_face_normals\"><svg aria-hidden=\"true\" viewBox=\"0 0 16 16\"><use xlink:href=\"#svg-link\"></use></svg></a>per_face_normals</h3>\n<pre><code>V: Vertices (NV x 3)\nF: Faces (NF x 3)\n\nf = F[i] # for face i\nv1 = V[f[1]] - V[f[0]]\nv2 = V[f[2]] - V[f[0]]\nfn = cross(v1, v2)\nif fn is zero vector:\n    return degenerated normal\nelse:\n    return normalized fn\n</code></pre>\n<h3 id=\"per_vertex_normals\"><a aria-hidden=\"true\" class=\"anchor-heading\" href=\"#per_vertex_normals\"><svg aria-hidden=\"true\" viewBox=\"0 0 16 16\"><use xlink:href=\"#svg-link\"></use></svg></a>per_vertex_normals</h3>\n<blockquote>\n<p>Weighted sum of adjacent faces' normal, interpolated by vertex shader</p>\n</blockquote>\n<pre><code>Weight W: NF x 3\ncase uniform: \n    all 1\ncase area: \n    compute face areas `doublearea` (NF x 1) replicated to (NF x 3)\ncase internal_angle: \n    `internal_angle` angle of each face cornors (angle between edges that share the same vertex)\n\n# theoritically loop through each vertex, compute its normal vn by\nvn = sum([w[i] * fn for normal of faces thats shares v])\n# implementation-wise it's more efficient to loop over faces\n\nreturn normalized vn\n\n</code></pre>\n<blockquote>\n<p>Interpolated vertex normals -> <a href=\"/my-personal-knowledge-cache/notes/njtx7H3U8oxCpuanmYcFw#mesh-ops\">Smooth shading in Blender</a></p>\n</blockquote>\n<h3 id=\"per_corner_normals\"><a aria-hidden=\"true\" class=\"anchor-heading\" href=\"#per_corner_normals\"><svg aria-hidden=\"true\" viewBox=\"0 0 16 16\"><use xlink:href=\"#svg-link\"></use></svg></a>per_corner_normals</h3>\n<blockquote>\n<p>Weighted (by double area) sum of selected (by angle between two normal) incident face normal, interpolated by vertex shader</p>\n<p>See: <a href=\"/my-personal-knowledge-cache/notes/ww8z42lj1f2cm9lj0yx3ubc#unrolled\">vertex_triangle_adjacency Unrolled</a></p>\n</blockquote>\n<pre><code>FA: double face area\nFN: face norm\nVF[NI[F(i, j)] + k]: (kth incident face) face index that incident to the jth vertex of face i\nFN.row(VF[NI[F(i, j)] + k]): normal of (kth incident face) face that incident to the jth vertex of face i\n</code></pre>\n<h3 id=\"vertex-shader\"><a aria-hidden=\"true\" class=\"anchor-heading\" href=\"#vertex-shader\"><svg aria-hidden=\"true\" viewBox=\"0 0 16 16\"><use xlink:href=\"#svg-link\"></use></svg></a>Vertex Shader</h3>\n<blockquote>\n<p>ViewerData</p>\n</blockquote>\n<p>Vertex</p>\n<pre><code>meshgl.V_normals_vbo = data.V_normals.cast&#x3C;float>();\n</code></pre>\n<p>Face or corner</p>\n<pre><code>meshgl.V_normals_vbo.resize(data.F.rows()*3,3);\nfor (unsigned i=0; i&#x3C;data.F.rows();++i)\n    for (unsigned j=0;j&#x3C;3;++j)\n        meshgl.V_normals_vbo.row(i*3+j) =\n            per_corner_normals ?\n            data.F_normals.row(i*3+j).cast&#x3C;float>() :\n            data.F_normals.row(i).cast&#x3C;float>();\n</code></pre>\n<blockquote>\n<p>MeshGL</p>\n</blockquote>\n<pre><code>bind_vertex_attrib_array(shader_mesh,\"normal\", vbo_V_normals, V_normals_vbo, dirty &#x26; MeshGL::DIRTY_NORMAL);\n</code></pre>\n<blockquote>\n<p>MeshGL:: mesh_vertex_shader</p>\n</blockquote>\n<pre><code>in vec3 normal;\n</code></pre>\n<h2 id=\"todo\"><a aria-hidden=\"true\" class=\"anchor-heading\" href=\"#todo\"><svg aria-hidden=\"true\" viewBox=\"0 0 16 16\"><use xlink:href=\"#svg-link\"></use></svg></a>TODO</h2>\n<ul class=\"contains-task-list\">\n<li class=\"task-list-item\"><input type=\"checkbox\" disabled> Laplace-Beltrami operator</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" disabled> Cotangent stiffness matrix (Polygon Laplacian Made Simple)</li>\n</ul>","noteIndex":{"id":"o3PkEany5FTDLokev2jkJ","title":"Root","desc":"","updated":1656832289330,"created":1640014633146,"custom":{"nav_order":0,"permalink":"/"},"fname":"root","type":"note","vault":{"fsPath":"vault"},"contentHash":"1f4a8dbd787743b10f24422968be02a9","links":[],"anchors":{"history":{"type":"header","text":"History","value":"history","line":10,"column":0,"depth":2},"disclaimer":{"type":"header","text":"Disclaimer","value":"disclaimer","line":15,"column":0,"depth":2}},"children":["Vn1Ykq4aIagi0bhZowkgD","ja5HFaIxVEtbZoTklNXfZ","vnzxfoqb6aqbrqy247uonqo","jjlv4wd30bvf0r680o9ptbi","kok8aerdrzko8v4i6w6qtjx","hr8ruqfxd2miwldyehzz5zy","criy8usqjrguecufwb3k8z2","3x9f9wclumzxc23dzgraepy","sma2hkp8hvq9urmtk94qqwq","4bcvwahaynsox941d8dimxw","8u19znq05xj50ptse0fq8nj","hbcft05imtwxxtwk52nij1n","2vmt81onv3jf06ejwfusj30","npuhs4xvm0sa31rz2gcuff3","mwt2mrjm58oa3q2osoqwd64","yjnf5fuac95jbdmjj923hyh","17p3nbv4rvga83hhsz2idzp","8r1egy8mz3lp7ud9p8kcg8z","5gf8xb68r1y0kxumkvvmuez","d92qhaqtfbt7e4eximdnbht","r25bm5nuug9krur6ddqearm"],"parent":null,"data":{},"body":"\nMy personal knowledge cache using [Dendron](https://www.dendron.so)\n\n## History\nIt was during my first job, at the start-up company called PixelShift.AI, that I acquired most prominent skill as a software engineer-the ability to read source code. It opened up a new way of learning and my knowledge expanded rapidly ever since. Learning new things is thriving but noting them down cogently and organized is hard. I often found myself forget the context few month later, making the notes completely intelligible. Additionally, some notes need frequent update as my previous understanding could be parochial, antiquated or even erroneous.\n\nIn desperate attempt to facilitate the noting/updating experience, I came across [Dendron](https://www.dendron.so) and found it surprisingly congenial to my personal need. With it, I have gradually grown the habit of caching, linking back and extending my knowledge base.\n\n## Disclaimer\nThe notes are collections of information I found along the journey. I use backquote to denote sources, but I am likely to miss some references, so apology in advance. Also, they are my personal understandings, usually added when I first encounter the topic and will be updated only when I come across it again, so some of them could be incomplete or wrong."},"collectionChildren":null,"customHeadContent":null,"config":{"version":5,"dev":{"enablePreviewV2":true},"commands":{"lookup":{"note":{"selectionMode":"extract","confirmVaultOnCreate":false,"leaveTrace":false,"bubbleUpCreateNew":true,"fuzzThreshold":0.2,"vaultSelectionModeOnCreate":"smart"}},"randomNote":{},"insertNote":{"initialValue":"templates"},"insertNoteLink":{"aliasMode":"none","enableMultiSelect":false},"insertNoteIndex":{"enableMarker":false},"copyNoteLink":{},"templateHierarchy":"template"},"workspace":{"vaults":[{"fsPath":"vault"}],"journal":{"dailyDomain":"daily","name":"journal","dateFormat":"y.MM.dd","addBehavior":"childOfDomain"},"scratch":{"name":"scratch","dateFormat":"y.MM.dd.HHmmss","addBehavior":"asOwnDomain"},"task":{"name":"","dateFormat":"","addBehavior":"childOfCurrent","statusSymbols":{"":" ","wip":"w","done":"x","assigned":"a","moved":"m","blocked":"b","delegated":"l","dropped":"d","pending":"y"},"prioritySymbols":{"H":"high","M":"medium","L":"low"},"todoIntegration":false,"createTaskSelectionType":"selection2link","taskCompleteStatus":["done","x"]},"graph":{"zoomSpeed":1,"createStub":false},"enableAutoCreateOnDefinition":false,"enableXVaultWikiLink":false,"enableRemoteVaultInit":true,"enableUserTags":true,"enableHashTags":true,"workspaceVaultSyncMode":"noCommit","enableAutoFoldFrontmatter":false,"enableEditorDecorations":true,"maxPreviewsCached":10,"maxNoteLength":204800,"dendronVersion":"0.86.1","enableFullHierarchyNoteTitle":false,"enableHandlebarTemplates":false,"templateHierarchy":"template"},"preview":{"enableFMTitle":true,"enableNoteTitleForLink":true,"enableMermaid":true,"enablePrettyRefs":true,"enableKatex":true,"automaticallyShowPreview":false,"enableFrontmatterTags":true,"enableHashesForFMTags":false},"publishing":{"enableFMTitle":true,"enableNoteTitleForLink":true,"enableMermaid":true,"enablePrettyRefs":true,"enableKatex":true,"copyAssets":true,"siteHierarchies":["root"],"enableSiteLastModified":true,"siteRootDir":"docs","enableFrontmatterTags":true,"enableHashesForFMTags":false,"enableRandomlyColoredTags":true,"duplicateNoteBehavior":{"action":"useVault","payload":["vault"]},"writeStubs":false,"seo":{"title":"Dendron","description":"Personal knowledge space"},"github":{"enableEditLink":true,"editLinkText":"Edit this page on GitHub","editBranch":"main","editViewMode":"tree"},"enablePrettyLinks":true,"assetsPrefix":"/my-personal-knowledge-cache","siteUrl":"https://ankbzpx.github.io","enableTaskNotes":true,"siteFaviconPath":"favicon.ico","siteIndex":"root"}}},"__N_SSG":true}