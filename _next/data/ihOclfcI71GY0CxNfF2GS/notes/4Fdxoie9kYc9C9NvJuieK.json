{"pageProps":{"note":{"id":"4Fdxoie9kYc9C9NvJuieK","title":"Shading","desc":"","updated":1647225512644,"created":1640019527539,"custom":{},"fname":"rendering.shading","type":"note","vault":{"fsPath":"vault"},"contentHash":"26d30c4db4b5dd75335e5540115e0518","links":[],"anchors":{"42":{"type":"header","text":"4.2+","value":"42","line":25,"column":0,"depth":3},"vertex--fragment-shader":{"type":"header","text":"Vertex & Fragment shader","value":"vertex--fragment-shader","line":8,"column":0,"depth":2},"data-types":{"type":"header","text":"Data types","value":"data-types","line":17,"column":0,"depth":2},"before-42":{"type":"header","text":"Before 4.2","value":"before-42","line":21,"column":0,"depth":3},"pass-data-from-vertex-to-fragment-shader":{"type":"header","text":"Pass data from Vertex to Fragment shader","value":"pass-data-from-vertex-to-fragment-shader","line":35,"column":0,"depth":2},"before-42-1":{"type":"header","text":"Before 4.2","value":"before-42-1","line":37,"column":0,"depth":3},"42-1":{"type":"header","text":"4.2+","value":"42-1","line":41,"column":0,"depth":3},"render-order":{"type":"header","text":"Render order","value":"render-order","line":44,"column":0,"depth":2}},"children":["WnrcsJvmh9XONqTwPNfz5"],"parent":"yjnf5fuac95jbdmjj923hyh","data":{}},"body":"<h1 id=\"shading\"><a aria-hidden=\"true\" class=\"anchor-heading\" href=\"#shading\"><svg aria-hidden=\"true\" viewBox=\"0 0 16 16\"><use xlink:href=\"#svg-link\"></use></svg></a>Shading</h1>\n<h2 id=\"vertex--fragment-shader\"><a aria-hidden=\"true\" class=\"anchor-heading\" href=\"#vertex--fragment-shader\"><svg aria-hidden=\"true\" viewBox=\"0 0 16 16\"><use xlink:href=\"#svg-link\"></use></svg></a>Vertex &#x26; Fragment shader</h2>\n<pre><code>Vertex Shader -> every vertex\n |\n | Coordinate interpolation\n v\nFragment Shader -> every pixel\n</code></pre>\n<h2 id=\"data-types\"><a aria-hidden=\"true\" class=\"anchor-heading\" href=\"#data-types\"><svg aria-hidden=\"true\" viewBox=\"0 0 16 16\"><use xlink:href=\"#svg-link\"></use></svg></a>Data types</h2>\n<ul>\n<li><code>const</code>: compile time constant</li>\n<li><code>uniform</code> (per-primitive): constant during entire draw call</li>\n</ul>\n<h3 id=\"before-42\"><a aria-hidden=\"true\" class=\"anchor-heading\" href=\"#before-42\"><svg aria-hidden=\"true\" viewBox=\"0 0 16 16\"><use xlink:href=\"#svg-link\"></use></svg></a>Before 4.2</h3>\n<ul>\n<li><code>attribute</code> (per-vertex): position, normal, uv, etc.</li>\n<li><code>varying</code> (per-fragment): Interpolated between vertex and fragment shader</li>\n</ul>\n<h3 id=\"42\"><a aria-hidden=\"true\" class=\"anchor-heading\" href=\"#42\"><svg aria-hidden=\"true\" viewBox=\"0 0 16 16\"><use xlink:href=\"#svg-link\"></use></svg></a>4.2+</h3>\n<blockquote>\n<p>Both <code>attribute</code> and <code>varying</code> are deprecated</p>\n</blockquote>\n<ul>\n<li><code>in</code>: linkage in from previous stage</li>\n<li><code>out</code>: linkage out to next stage</li>\n</ul>\n<blockquote>\n<p>Reference: <a href=\"https://gamedev.stackexchange.com/questions/29672/in-out-keywords-in-glsl\">https://gamedev.stackexchange.com/questions/29672/in-out-keywords-in-glsl</a></p>\n</blockquote>\n<h2 id=\"pass-data-from-vertex-to-fragment-shader\"><a aria-hidden=\"true\" class=\"anchor-heading\" href=\"#pass-data-from-vertex-to-fragment-shader\"><svg aria-hidden=\"true\" viewBox=\"0 0 16 16\"><use xlink:href=\"#svg-link\"></use></svg></a>Pass data from Vertex to Fragment shader</h2>\n<h3 id=\"before-42-1\"><a aria-hidden=\"true\" class=\"anchor-heading\" href=\"#before-42-1\"><svg aria-hidden=\"true\" viewBox=\"0 0 16 16\"><use xlink:href=\"#svg-link\"></use></svg></a>Before 4.2</h3>\n<p>Declare <code>varying</code> variable in both shaders</p>\n<h3 id=\"42-1\"><a aria-hidden=\"true\" class=\"anchor-heading\" href=\"#42-1\"><svg aria-hidden=\"true\" viewBox=\"0 0 16 16\"><use xlink:href=\"#svg-link\"></use></svg></a>4.2+</h3>\n<p>Declare <code>out</code> for vertex shader, <code>in</code> for fragement shader</p>\n<h2 id=\"render-order\"><a aria-hidden=\"true\" class=\"anchor-heading\" href=\"#render-order\"><svg aria-hidden=\"true\" viewBox=\"0 0 16 16\"><use xlink:href=\"#svg-link\"></use></svg></a>Render order</h2>\n<ul>\n<li>Opaque: front to back</li>\n<li>Transparent: back to front</li>\n</ul>\n<blockquote>\n<p>Portal effect: Render occlusion object first (write depth but no color), then render the rest. Fragment further than occlusion depth will be discarded.</p>\n</blockquote>\n<hr>\n<strong>Children</strong>\n<ol>\n<li><a href=\"/my-personal-knowledge-cache/notes/WnrcsJvmh9XONqTwPNfz5\">Tips</a></li>\n</ol>","noteIndex":{"id":"o3PkEany5FTDLokev2jkJ","title":"Root","desc":"","updated":1656832289330,"created":1640014633146,"custom":{"nav_order":0,"permalink":"/"},"fname":"root","type":"note","vault":{"fsPath":"vault"},"contentHash":"1f4a8dbd787743b10f24422968be02a9","links":[],"anchors":{"history":{"type":"header","text":"History","value":"history","line":10,"column":0,"depth":2},"disclaimer":{"type":"header","text":"Disclaimer","value":"disclaimer","line":15,"column":0,"depth":2}},"children":["Vn1Ykq4aIagi0bhZowkgD","ja5HFaIxVEtbZoTklNXfZ","vnzxfoqb6aqbrqy247uonqo","jjlv4wd30bvf0r680o9ptbi","kok8aerdrzko8v4i6w6qtjx","hr8ruqfxd2miwldyehzz5zy","criy8usqjrguecufwb3k8z2","3x9f9wclumzxc23dzgraepy","sma2hkp8hvq9urmtk94qqwq","4bcvwahaynsox941d8dimxw","8u19znq05xj50ptse0fq8nj","hbcft05imtwxxtwk52nij1n","2vmt81onv3jf06ejwfusj30","npuhs4xvm0sa31rz2gcuff3","mwt2mrjm58oa3q2osoqwd64","yjnf5fuac95jbdmjj923hyh","17p3nbv4rvga83hhsz2idzp","8r1egy8mz3lp7ud9p8kcg8z","5gf8xb68r1y0kxumkvvmuez","d92qhaqtfbt7e4eximdnbht","r25bm5nuug9krur6ddqearm"],"parent":null,"data":{},"body":"\nMy personal knowledge cache using [Dendron](https://www.dendron.so)\n\n## History\nIt was during my first job, at the start-up company called PixelShift.AI, that I acquired most prominent skill as a software engineer-the ability to read source code. It opened up a new way of learning and my knowledge expanded rapidly ever since. Learning new things is thriving but noting them down cogently and organized is hard. I often found myself forget the context few month later, making the notes completely intelligible. Additionally, some notes need frequent update as my previous understanding could be parochial, antiquated or even erroneous.\n\nIn desperate attempt to facilitate the noting/updating experience, I came across [Dendron](https://www.dendron.so) and found it surprisingly congenial to my personal need. With it, I have gradually grown the habit of caching, linking back and extending my knowledge base.\n\n## Disclaimer\nThe notes are collections of information I found along the journey. I use backquote to denote sources, but I am likely to miss some references, so apology in advance. Also, they are my personal understandings, usually added when I first encounter the topic and will be updated only when I come across it again, so some of them could be incomplete or wrong."},"collectionChildren":null,"customHeadContent":null,"config":{"version":5,"dev":{"enablePreviewV2":true},"commands":{"lookup":{"note":{"selectionMode":"extract","confirmVaultOnCreate":false,"leaveTrace":false,"bubbleUpCreateNew":true,"fuzzThreshold":0.2,"vaultSelectionModeOnCreate":"smart"}},"randomNote":{},"insertNote":{"initialValue":"templates"},"insertNoteLink":{"aliasMode":"none","enableMultiSelect":false},"insertNoteIndex":{"enableMarker":false},"copyNoteLink":{},"templateHierarchy":"template"},"workspace":{"vaults":[{"fsPath":"vault"}],"journal":{"dailyDomain":"daily","name":"journal","dateFormat":"y.MM.dd","addBehavior":"childOfDomain"},"scratch":{"name":"scratch","dateFormat":"y.MM.dd.HHmmss","addBehavior":"asOwnDomain"},"task":{"name":"","dateFormat":"","addBehavior":"childOfCurrent","statusSymbols":{"":" ","wip":"w","done":"x","assigned":"a","moved":"m","blocked":"b","delegated":"l","dropped":"d","pending":"y"},"prioritySymbols":{"H":"high","M":"medium","L":"low"},"todoIntegration":false,"createTaskSelectionType":"selection2link","taskCompleteStatus":["done","x"]},"graph":{"zoomSpeed":1,"createStub":false},"enableAutoCreateOnDefinition":false,"enableXVaultWikiLink":false,"enableRemoteVaultInit":true,"enableUserTags":true,"enableHashTags":true,"workspaceVaultSyncMode":"noCommit","enableAutoFoldFrontmatter":false,"enableEditorDecorations":true,"maxPreviewsCached":10,"maxNoteLength":204800,"dendronVersion":"0.86.1","enableFullHierarchyNoteTitle":false,"enableHandlebarTemplates":false,"templateHierarchy":"template"},"preview":{"enableFMTitle":true,"enableNoteTitleForLink":true,"enableMermaid":true,"enablePrettyRefs":true,"enableKatex":true,"automaticallyShowPreview":false,"enableFrontmatterTags":true,"enableHashesForFMTags":false},"publishing":{"enableFMTitle":true,"enableNoteTitleForLink":true,"enableMermaid":true,"enablePrettyRefs":true,"enableKatex":true,"copyAssets":true,"siteHierarchies":["root"],"enableSiteLastModified":true,"siteRootDir":"docs","enableFrontmatterTags":true,"enableHashesForFMTags":false,"enableRandomlyColoredTags":true,"duplicateNoteBehavior":{"action":"useVault","payload":["vault"]},"writeStubs":false,"seo":{"title":"Dendron","description":"Personal knowledge space"},"github":{"enableEditLink":true,"editLinkText":"Edit this page on GitHub","editBranch":"main","editViewMode":"tree"},"enablePrettyLinks":true,"assetsPrefix":"/my-personal-knowledge-cache","siteUrl":"https://ankbzpx.github.io","enableTaskNotes":true,"siteFaviconPath":"favicon.ico","siteIndex":"root"}}},"__N_SSG":true}