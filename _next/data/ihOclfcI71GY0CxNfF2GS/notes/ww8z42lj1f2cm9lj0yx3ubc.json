{"pageProps":{"note":{"id":"ww8z42lj1f2cm9lj0yx3ubc","title":"Neighbourhood Connectivity","desc":"","updated":1649901726287,"created":1647231617065,"custom":{},"fname":"code-read.igl.neighbourhood-connectivity","type":"note","vault":{"fsPath":"vault"},"contentHash":"87643411ffa973cd0634335c35772e7e","links":[{"type":"wiki","from":{"fname":"code-read.igl.neighbourhood-connectivity","id":"ww8z42lj1f2cm9lj0yx3ubc","vaultName":"vault"},"value":"polygon.connect-polygons-with-their-offset-ones","alias":"Implementation","position":{"start":{"line":50,"column":28,"offset":1089},"end":{"line":50,"column":109,"offset":1170},"indent":[]},"xvault":false,"sameFile":false,"to":{"fname":"polygon.connect-polygons-with-their-offset-ones","anchorHeader":"implementation"}},{"type":"wiki","from":{"fname":"code-read.igl.neighbourhood-connectivity","id":"ww8z42lj1f2cm9lj0yx3ubc","vaultName":"vault"},"value":"code-read.igl.neighbourhood-connectivity","alias":"facet_adjacency_matrix","position":{"start":{"line":58,"column":40,"offset":1354},"end":{"line":58,"column":130,"offset":1444},"indent":[]},"xvault":false,"sameFile":false,"to":{"fname":"code-read.igl.neighbourhood-connectivity","anchorHeader":"facet_adjacency_matrix"}},{"type":"wiki","from":{"fname":"code-read.igl.neighbourhood-connectivity","id":"ww8z42lj1f2cm9lj0yx3ubc","vaultName":"vault"},"value":"code-read.igl.neighbourhood-connectivity","alias":"unique_edge_map","position":{"start":{"line":63,"column":9,"offset":1583},"end":{"line":63,"column":85,"offset":1659},"indent":[]},"xvault":false,"sameFile":false,"to":{"fname":"code-read.igl.neighbourhood-connectivity","anchorHeader":"unique_edge_map"}},{"type":"wiki","from":{"fname":"code-read.igl.neighbourhood-connectivity","id":"ww8z42lj1f2cm9lj0yx3ubc","vaultName":"vault"},"value":"code-read.igl.neighbourhood-connectivity","alias":"oriented_facets","position":{"start":{"line":64,"column":9,"offset":1757},"end":{"line":64,"column":85,"offset":1833},"indent":[]},"xvault":false,"sameFile":false,"to":{"fname":"code-read.igl.neighbourhood-connectivity","anchorHeader":"oriented_facets"}},{"type":"wiki","from":{"fname":"code-read.igl.neighbourhood-connectivity","id":"ww8z42lj1f2cm9lj0yx3ubc","vaultName":"vault"},"value":"code-read.igl.neighbourhood-connectivity","alias":"oriented_facets","position":{"start":{"line":69,"column":34,"offset":2077},"end":{"line":69,"column":110,"offset":2153},"indent":[]},"xvault":false,"sameFile":false,"to":{"fname":"code-read.igl.neighbourhood-connectivity","anchorHeader":"oriented_facets"}},{"type":"wiki","from":{"fname":"code-read.igl.neighbourhood-connectivity","id":"ww8z42lj1f2cm9lj0yx3ubc","vaultName":"vault"},"value":"code-read.igl.neighbourhood-connectivity","alias":"unique_simplices","position":{"start":{"line":69,"column":129,"offset":2172},"end":{"line":69,"column":207,"offset":2250},"indent":[]},"xvault":false,"sameFile":false,"to":{"fname":"code-read.igl.neighbourhood-connectivity","anchorHeader":"unique_simplices"}},{"type":"wiki","from":{"fname":"code-read.igl.neighbourhood-connectivity","id":"ww8z42lj1f2cm9lj0yx3ubc","vaultName":"vault"},"value":"code-read.igl.neighbourhood-connectivity","alias":"unique_rows","position":{"start":{"line":69,"column":276,"offset":2319},"end":{"line":69,"column":344,"offset":2387},"indent":[]},"xvault":false,"sameFile":false,"to":{"fname":"code-read.igl.neighbourhood-connectivity","anchorHeader":"unique_rows"}},{"type":"wiki","from":{"fname":"code-read.igl.neighbourhood-connectivity","id":"ww8z42lj1f2cm9lj0yx3ubc","vaultName":"vault"},"value":"code-read.igl.neighbourhood-connectivity","alias":"Unrolled","position":{"start":{"line":71,"column":17,"offset":2478},"end":{"line":71,"column":79,"offset":2540},"indent":[]},"xvault":false,"sameFile":false,"to":{"fname":"code-read.igl.neighbourhood-connectivity","anchorHeader":"unrolled"}},{"type":"wiki","from":{"fname":"code-read.igl.neighbourhood-connectivity","id":"ww8z42lj1f2cm9lj0yx3ubc","vaultName":"vault"},"value":"code-read.igl.neighbourhood-connectivity","alias":"unique_rows","position":{"start":{"line":114,"column":32,"offset":3664},"end":{"line":114,"column":100,"offset":3732},"indent":[]},"xvault":false,"sameFile":false,"to":{"fname":"code-read.igl.neighbourhood-connectivity","anchorHeader":"unique_rows"}},{"type":"wiki","from":{"fname":"code-read.igl.neighbourhood-connectivity","id":"ww8z42lj1f2cm9lj0yx3ubc","vaultName":"vault"},"value":"snippets.remove_duplicate_vertices","alias":"snippets.remove_duplicate_vertices","position":{"start":{"line":125,"column":30,"offset":3877},"end":{"line":125,"column":68,"offset":3915},"indent":[]},"xvault":false,"sameFile":false,"to":{"fname":"snippets.remove_duplicate_vertices"}},{"from":{"fname":"code-read.igl.mesh-parameterization","vaultName":"vault"},"type":"backlink","position":{"start":{"line":3,"column":12,"offset":30},"end":{"line":3,"column":108,"offset":126},"indent":[]},"value":"code-read.igl.neighbourhood-connectivity","alias":"vertex_triangle_adjacency"},{"from":{"fname":"code-read.igl.mesh-parameterization","vaultName":"vault"},"type":"backlink","position":{"start":{"line":18,"column":12,"offset":719},"end":{"line":18,"column":108,"offset":815},"indent":[]},"value":"code-read.igl.neighbourhood-connectivity","alias":"vertex_triangle_adjacency"},{"from":{"fname":"code-read.igl.normal-vector","vaultName":"vault"},"type":"backlink","position":{"start":{"line":55,"column":7,"offset":1324},"end":{"line":55,"column":95,"offset":1412},"indent":[]},"value":"code-read.igl.neighbourhood-connectivity","alias":"vertex_triangle_adjacency Unrolled"},{"from":{"fname":"code-read.igl.subdivision","vaultName":"vault"},"type":"backlink","position":{"start":{"line":27,"column":12,"offset":885},"end":{"line":27,"column":88,"offset":961},"indent":[]},"value":"code-read.igl.neighbourhood-connectivity","alias":"unique_edge_map"}],"anchors":{"concepts":{"type":"header","text":"Concepts","value":"concepts","line":8,"column":0,"depth":2},"manifold-mesh":{"type":"header","text":"Manifold mesh","value":"manifold-mesh","line":9,"column":0,"depth":3},"vertex_triangle-adjacency":{"type":"header","text":"vertex_triangle adjacency","value":"vertex_triangle-adjacency","line":15,"column":0,"depth":2},"vertex_triangle_adjacency":{"type":"header","text":"vertex_triangle_adjacency","value":"vertex_triangle_adjacency","line":17,"column":0,"depth":3},"vector-of-vector":{"type":"header","text":"Vector of vector","value":"vector-of-vector","line":19,"column":0,"depth":4},"unrolled":{"type":"header","text":"Unrolled","value":"unrolled","line":28,"column":0,"depth":4},"vertex_vertex-adjacency":{"type":"header","text":"vertex_vertex adjacency","value":"vertex_vertex-adjacency","line":49,"column":0,"depth":2},"adjacency_list":{"type":"header","text":"adjacency_list","value":"adjacency_list","line":50,"column":0,"depth":3},"edge_edge-adjacency":{"type":"header","text":"edge_edge adjacency","value":"edge_edge-adjacency","line":58,"column":0,"depth":2},"facet_components":{"type":"header","text":"facet_components","value":"facet_components","line":60,"column":0,"depth":3},"facet_adjacency_matrix":{"type":"header","text":"facet_adjacency_matrix","value":"facet_adjacency_matrix","line":67,"column":0,"depth":3},"unique_edge_map":{"type":"header","text":"unique_edge_map","value":"unique_edge_map","line":73,"column":0,"depth":3},"oriented_facets":{"type":"header","text":"oriented_facets","value":"oriented_facets","line":98,"column":0,"depth":3},"unique_simplices":{"type":"header","text":"unique_simplices","value":"unique_simplices","line":115,"column":0,"depth":3},"unique_rows":{"type":"header","text":"unique_rows","value":"unique_rows","line":122,"column":0,"depth":3},"todo":{"type":"header","text":"TODO","value":"todo","line":136,"column":0,"depth":2}},"children":[],"parent":"40bub3uyyulxmaw57e9ntnv","data":{}},"body":"<h1 id=\"neighbourhood-connectivity\"><a aria-hidden=\"true\" class=\"anchor-heading\" href=\"#neighbourhood-connectivity\"><svg aria-hidden=\"true\" viewBox=\"0 0 16 16\"><use xlink:href=\"#svg-link\"></use></svg></a>Neighbourhood Connectivity</h1>\n<h2 id=\"concepts\"><a aria-hidden=\"true\" class=\"anchor-heading\" href=\"#concepts\"><svg aria-hidden=\"true\" viewBox=\"0 0 16 16\"><use xlink:href=\"#svg-link\"></use></svg></a>Concepts</h2>\n<h3 id=\"manifold-mesh\"><a aria-hidden=\"true\" class=\"anchor-heading\" href=\"#manifold-mesh\"><svg aria-hidden=\"true\" viewBox=\"0 0 16 16\"><use xlink:href=\"#svg-link\"></use></svg></a>Manifold mesh</h3>\n<blockquote>\n<p>Reference: <a href=\"https://pages.mtu.edu/~shene/COURSES/cs3621/SLIDES/Mesh.pdf\">https://pages.mtu.edu/~shene/COURSES/cs3621/SLIDES/Mesh.pdf</a></p>\n</blockquote>\n<ul>\n<li>Each edge is incident to only one or two faces</li>\n<li>Faces incident to a vertex form a closed or an open fan</li>\n</ul>\n<h2 id=\"vertex_triangle-adjacency\"><a aria-hidden=\"true\" class=\"anchor-heading\" href=\"#vertex_triangle-adjacency\"><svg aria-hidden=\"true\" viewBox=\"0 0 16 16\"><use xlink:href=\"#svg-link\"></use></svg></a>vertex_triangle adjacency</h2>\n<h3 id=\"vertex_triangle_adjacency\"><a aria-hidden=\"true\" class=\"anchor-heading\" href=\"#vertex_triangle_adjacency\"><svg aria-hidden=\"true\" viewBox=\"0 0 16 16\"><use xlink:href=\"#svg-link\"></use></svg></a>vertex_triangle_adjacency</h3>\n<h4 id=\"vector-of-vector\"><a aria-hidden=\"true\" class=\"anchor-heading\" href=\"#vector-of-vector\"><svg aria-hidden=\"true\" viewBox=\"0 0 16 16\"><use xlink:href=\"#svg-link\"></use></svg></a>Vector of vector</h4>\n<p>Loop through all faces with their vertex indices, push back occurrence</p>\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n<table><thead><tr><th align=\"left\">Vert index</th><th align=\"left\">Incident Face indices</th></tr></thead><tbody><tr><td align=\"left\">0</td><td align=\"left\">0, 1</td></tr><tr><td align=\"left\">1</td><td align=\"left\">9, 13, 1</td></tr></tbody></table>\n<h4 id=\"unrolled\"><a aria-hidden=\"true\" class=\"anchor-heading\" href=\"#unrolled\"><svg aria-hidden=\"true\" viewBox=\"0 0 16 16\"><use xlink:href=\"#svg-link\"></use></svg></a>Unrolled</h4>\n<pre><code>vfd(i): number of incident faces at vertex i\nNI: cumsum of vfd, prepend 0\nNI(i): number of cummulated incident faces before vertex i\nVF(NI(i) + k): kth face incident on vertex i (vertex index -> face index)\n</code></pre>\n<p>We unroll and store it into array and index it by cumsum</p>\n<p>Array:</p>\n<pre><code>[0, 1, 9, 13, 1]\n</code></pre>\n<p>Index:</p>\n<pre><code>[0, 2, 5]\n</code></pre>\n<h2 id=\"vertex_vertex-adjacency\"><a aria-hidden=\"true\" class=\"anchor-heading\" href=\"#vertex_vertex-adjacency\"><svg aria-hidden=\"true\" viewBox=\"0 0 16 16\"><use xlink:href=\"#svg-link\"></use></svg></a>vertex_vertex adjacency</h2>\n<h3 id=\"adjacency_list\"><a aria-hidden=\"true\" class=\"anchor-heading\" href=\"#adjacency_list\"><svg aria-hidden=\"true\" viewBox=\"0 0 16 16\"><use xlink:href=\"#svg-link\"></use></svg></a>adjacency_list</h3>\n<ol>\n<li>Loop through all faces with their vertex indices, for the vector of each vertex index, push back all other vertex indices</li>\n<li>sort and remove duplicates</li>\n</ol>\n<blockquote>\n<p>My numpy implementation: <a href=\"/my-personal-knowledge-cache/notes/6xcpu4fh3at4bbmptj9c8nr#implementation\">Implementation</a></p>\n</blockquote>\n<h2 id=\"edge_edge-adjacency\"><a aria-hidden=\"true\" class=\"anchor-heading\" href=\"#edge_edge-adjacency\"><svg aria-hidden=\"true\" viewBox=\"0 0 16 16\"><use xlink:href=\"#svg-link\"></use></svg></a>edge_edge adjacency</h2>\n<h3 id=\"facet_components\"><a aria-hidden=\"true\" class=\"anchor-heading\" href=\"#facet_components\"><svg aria-hidden=\"true\" viewBox=\"0 0 16 16\"><use xlink:href=\"#svg-link\"></use></svg></a>facet_components</h3>\n<p>Compute number of connected facets and assign each face an id based on its connected components</p>\n<ol>\n<li>Compute face adjacency matrix using <a href=\"/my-personal-knowledge-cache/notes/ww8z42lj1f2cm9lj0yx3ubc#facet_adjacency_matrix\">facet_adjacency_matrix</a></li>\n<li>Perform <strong>breadth first search</strong> on adjacency matrix row-wise, increase id when each row finished</li>\n</ol>\n<h3 id=\"facet_adjacency_matrix\"><a aria-hidden=\"true\" class=\"anchor-heading\" href=\"#facet_adjacency_matrix\"><svg aria-hidden=\"true\" viewBox=\"0 0 16 16\"><use xlink:href=\"#svg-link\"></use></svg></a>facet_adjacency_matrix</h3>\n<ol>\n<li>Call <a href=\"/my-personal-knowledge-cache/notes/ww8z42lj1f2cm9lj0yx3ubc#unique_edge_map\">unique_edge_map</a>, we get a list of oriented edges indices that share the same unique unoriented occurence</li>\n<li>From <a href=\"/my-personal-knowledge-cache/notes/ww8z42lj1f2cm9lj0yx3ubc#oriented_facets\">oriented_facets</a>, by modding oriented facets index over NF, we can get its face index</li>\n<li>Combine 1 and 2, we know which faces share the same edge, thus a NF x NF sparse adjacency matrix can be constructed</li>\n</ol>\n<h3 id=\"unique_edge_map\"><a aria-hidden=\"true\" class=\"anchor-heading\" href=\"#unique_edge_map\"><svg aria-hidden=\"true\" viewBox=\"0 0 16 16\"><use xlink:href=\"#svg-link\"></use></svg></a>unique_edge_map</h3>\n<ol>\n<li>\n<p>Find all oriented edges using <a href=\"/my-personal-knowledge-cache/notes/ww8z42lj1f2cm9lj0yx3ubc#oriented_facets\">oriented_facets</a> then filter using <a href=\"/my-personal-knowledge-cache/notes/ww8z42lj1f2cm9lj0yx3ubc#unique_simplices\">unique_simplices</a>. (faster than directly finding unoriented edges) (<code>EMAP</code> is <code>IC</code> in <a href=\"/my-personal-knowledge-cache/notes/ww8z42lj1f2cm9lj0yx3ubc#unique_rows\">unique_rows</a>, used to construct all oriented edges from unique unoriented edges, 3NF)</p>\n</li>\n<li>\n<p>Same idea as <a href=\"/my-personal-knowledge-cache/notes/ww8z42lj1f2cm9lj0yx3ubc#unrolled\">Unrolled</a>, unroll a list of oriented edges indice (3NF) grouped by unique unoriented occurance, as well as a array of index, with each element be the number of oriented edges before the first of unique unoriented occurrence, NUE(number of unique unoriented edges) + 1</p>\n</li>\n</ol>\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n<table><thead><tr><th align=\"left\">Unique edge index</th><th align=\"left\">edge indice in edge list</th></tr></thead><tbody><tr><td align=\"left\">0</td><td align=\"left\">0, 10</td></tr><tr><td align=\"left\">1</td><td align=\"left\">9, 13, 1</td></tr></tbody></table>\n<pre><code>VectorXI uEK;\nigl::accumarray(EMAP,1,uEK);\n</code></pre>\n<p>computes occurance for each unique edges</p>\n<pre><code>uEC: cumsum of uEK as index\nuEO: array used for counting\ne: the e'th edge in oriented edge lists\nue = EMAP(e): index of unique unoriented edge corresponding to e'th edge in oriented edge lists\nuEE(uEC(ue)+ uEO(ue)) = e: record oriented edge index\n</code></pre>\n<h3 id=\"oriented_facets\"><a aria-hidden=\"true\" class=\"anchor-heading\" href=\"#oriented_facets\"><svg aria-hidden=\"true\" viewBox=\"0 0 16 16\"><use xlink:href=\"#svg-link\"></use></svg></a>oriented_facets</h3>\n<p>For manifold triangle mesh</p>\n<p>Given <span class=\"math math-inline\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>F</mi><mo>∈</mo><msup><mi mathvariant=\"double-struck\">Z</mi><mrow><mi>n</mi><mo>×</mo><mn>3</mn></mrow></msup></mrow><annotation encoding=\"application/x-tex\">F \\in \\mathbb{Z}^{n \\times 3}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.7224em;vertical-align:-0.0391em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">F</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">∈</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.8141em;\"></span><span class=\"mord\"><span class=\"mord mathbb\">Z</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">n</span><span class=\"mbin mtight\">×</span><span class=\"mord mtight\">3</span></span></span></span></span></span></span></span></span></span></span></span></span>, so that</p>\n<div class=\"math math-display\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><mi>E</mi><mo>=</mo><mrow><mo fence=\"true\">[</mo><mtable rowspacing=\"0.16em\" columnalign=\"center center\" columnspacing=\"1em\"><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mrow><mi>F</mi><mo stretchy=\"false\">[</mo><mo>:</mo><mo separator=\"true\">,</mo><mn>1</mn><mo stretchy=\"false\">]</mo></mrow></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mrow><mi>F</mi><mo stretchy=\"false\">[</mo><mo>:</mo><mo separator=\"true\">,</mo><mn>2</mn><mo stretchy=\"false\">]</mo></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mrow><mi>F</mi><mo stretchy=\"false\">[</mo><mo>:</mo><mo separator=\"true\">,</mo><mn>2</mn><mo stretchy=\"false\">]</mo></mrow></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mrow><mi>F</mi><mo stretchy=\"false\">[</mo><mo>:</mo><mo separator=\"true\">,</mo><mn>0</mn><mo stretchy=\"false\">]</mo></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mrow><mi>F</mi><mo stretchy=\"false\">[</mo><mo>:</mo><mo separator=\"true\">,</mo><mn>0</mn><mo stretchy=\"false\">]</mo></mrow></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mrow><mi>F</mi><mo stretchy=\"false\">[</mo><mo>:</mo><mo separator=\"true\">,</mo><mn>1</mn><mo stretchy=\"false\">]</mo></mrow></mstyle></mtd></mtr></mtable><mo fence=\"true\">]</mo></mrow><mo>∈</mo><msup><mi mathvariant=\"double-struck\">Z</mi><mrow><mn>3</mn><mi>n</mi><mo>×</mo><mn>2</mn></mrow></msup></mrow><annotation encoding=\"application/x-tex\">E = \\begin{bmatrix} F[:, 1] &#x26; F[:, 2] \\\\ F[:, 2] &#x26; F[:, 0] \\\\ F[:, 0] &#x26; F[:, 1] \\\\ \\end{bmatrix} \\in \\mathbb{Z}^{3n \\times 2}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05764em;\">E</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:3.6em;vertical-align:-1.55em;\"></span><span class=\"minner\"><span class=\"mopen\"><span class=\"delimsizing mult\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.05em;\"><span style=\"top:-2.25em;\"><span class=\"pstrut\" style=\"height:3.155em;\"></span><span class=\"delimsizinginner delim-size4\"><span>⎣</span></span></span><span style=\"top:-3.397em;\"><span class=\"pstrut\" style=\"height:3.155em;\"></span><span style=\"height:0.016em;width:0.6667em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"0.6667em\" height=\"0.016em\" style=\"width:0.6667em\" viewBox=\"0 0 666.67 16\" preserveAspectRatio=\"xMinYMin\"><path d=\"M319 0 H403 V16 H319z M319 0 H403 V16 H319z\"></path></svg></span></span><span style=\"top:-4.05em;\"><span class=\"pstrut\" style=\"height:3.155em;\"></span><span class=\"delimsizinginner delim-size4\"><span>⎡</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.55em;\"><span></span></span></span></span></span></span><span class=\"mord\"><span class=\"mtable\"><span class=\"col-align-c\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.05em;\"><span style=\"top:-4.21em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">F</span><span class=\"mopen\">[</span><span class=\"mrel\">:</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\">1</span><span class=\"mclose\">]</span></span></span><span style=\"top:-3.01em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">F</span><span class=\"mopen\">[</span><span class=\"mrel\">:</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\">2</span><span class=\"mclose\">]</span></span></span><span style=\"top:-1.81em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">F</span><span class=\"mopen\">[</span><span class=\"mrel\">:</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\">0</span><span class=\"mclose\">]</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.55em;\"><span></span></span></span></span></span><span class=\"arraycolsep\" style=\"width:0.5em;\"></span><span class=\"arraycolsep\" style=\"width:0.5em;\"></span><span class=\"col-align-c\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.05em;\"><span style=\"top:-4.21em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">F</span><span class=\"mopen\">[</span><span class=\"mrel\">:</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\">2</span><span class=\"mclose\">]</span></span></span><span style=\"top:-3.01em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">F</span><span class=\"mopen\">[</span><span class=\"mrel\">:</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\">0</span><span class=\"mclose\">]</span></span></span><span style=\"top:-1.81em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">F</span><span class=\"mopen\">[</span><span class=\"mrel\">:</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\">1</span><span class=\"mclose\">]</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.55em;\"><span></span></span></span></span></span></span></span><span class=\"mclose\"><span class=\"delimsizing mult\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.05em;\"><span style=\"top:-2.25em;\"><span class=\"pstrut\" style=\"height:3.155em;\"></span><span class=\"delimsizinginner delim-size4\"><span>⎦</span></span></span><span style=\"top:-3.397em;\"><span class=\"pstrut\" style=\"height:3.155em;\"></span><span style=\"height:0.016em;width:0.6667em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"0.6667em\" height=\"0.016em\" style=\"width:0.6667em\" viewBox=\"0 0 666.67 16\" preserveAspectRatio=\"xMinYMin\"><path d=\"M263 0 H347 V16 H263z M263 0 H347 V16 H263z\"></path></svg></span></span><span style=\"top:-4.05em;\"><span class=\"pstrut\" style=\"height:3.155em;\"></span><span class=\"delimsizinginner delim-size4\"><span>⎤</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.55em;\"><span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">∈</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.8641em;\"></span><span class=\"mord\"><span class=\"mord mathbb\">Z</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8641em;\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">3</span><span class=\"mord mathnormal mtight\">n</span><span class=\"mbin mtight\">×</span><span class=\"mord mtight\">2</span></span></span></span></span></span></span></span></span></span></span></span></span></div>\n<h3 id=\"unique_simplices\"><a aria-hidden=\"true\" class=\"anchor-heading\" href=\"#unique_simplices\"><svg aria-hidden=\"true\" viewBox=\"0 0 16 16\"><use xlink:href=\"#svg-link\"></use></svg></a>unique_simplices</h3>\n<p>Given N x D simplices matrix (D is the dimension of simplex)</p>\n<ol>\n<li>Sort row-wise</li>\n<li>Keep unique ones by calling <a href=\"/my-personal-knowledge-cache/notes/ww8z42lj1f2cm9lj0yx3ubc#unique_rows\">unique_rows</a></li>\n</ol>\n<h3 id=\"unique_rows\"><a aria-hidden=\"true\" class=\"anchor-heading\" href=\"#unique_rows\"><svg aria-hidden=\"true\" viewBox=\"0 0 16 16\"><use xlink:href=\"#svg-link\"></use></svg></a>unique_rows</h3>\n<pre><code>A: input\nC: unique rows\nIA: index to construct C from A\nIC: index to construct A from C\n</code></pre>\n<p>Similary to <code>np.unique</code>, see <a href=\"/my-personal-knowledge-cache/notes/di7r0ovvs9w8kd81ajn1mrh\">Remove_duplicate_vertices</a></p>\n<ul>\n<li><code>IA</code> -> <code>unique_indices</code></li>\n<li><code>IC</code> -> <code>unique_indices</code></li>\n</ul>\n<h2 id=\"todo\"><a aria-hidden=\"true\" class=\"anchor-heading\" href=\"#todo\"><svg aria-hidden=\"true\" viewBox=\"0 0 16 16\"><use xlink:href=\"#svg-link\"></use></svg></a>TODO</h2>\n<ul class=\"contains-task-list\">\n<li class=\"task-list-item\"><input type=\"checkbox\" checked disabled> Manifold mesh</li>\n</ul>\n<hr>\n<strong>Backlinks</strong>\n<ul>\n<li><a href=\"/my-personal-knowledge-cache/notes/6jal7oacj8b4p1cg6aluj7v\">Mesh Parameterization</a></li>\n<li><a href=\"/my-personal-knowledge-cache/notes/edudwmtuufpqosp7ztuwddr\">Normal Vector</a></li>\n<li><a href=\"/my-personal-knowledge-cache/notes/rofvgoy9bqzswabd2hlhmj0\">Subdivision</a></li>\n</ul>","noteIndex":{"id":"o3PkEany5FTDLokev2jkJ","title":"Root","desc":"","updated":1656832289330,"created":1640014633146,"custom":{"nav_order":0,"permalink":"/"},"fname":"root","type":"note","vault":{"fsPath":"vault"},"contentHash":"1f4a8dbd787743b10f24422968be02a9","links":[],"anchors":{"history":{"type":"header","text":"History","value":"history","line":10,"column":0,"depth":2},"disclaimer":{"type":"header","text":"Disclaimer","value":"disclaimer","line":15,"column":0,"depth":2}},"children":["Vn1Ykq4aIagi0bhZowkgD","ja5HFaIxVEtbZoTklNXfZ","vnzxfoqb6aqbrqy247uonqo","jjlv4wd30bvf0r680o9ptbi","kok8aerdrzko8v4i6w6qtjx","hr8ruqfxd2miwldyehzz5zy","criy8usqjrguecufwb3k8z2","3x9f9wclumzxc23dzgraepy","sma2hkp8hvq9urmtk94qqwq","4bcvwahaynsox941d8dimxw","8u19znq05xj50ptse0fq8nj","hbcft05imtwxxtwk52nij1n","2vmt81onv3jf06ejwfusj30","npuhs4xvm0sa31rz2gcuff3","mwt2mrjm58oa3q2osoqwd64","yjnf5fuac95jbdmjj923hyh","17p3nbv4rvga83hhsz2idzp","8r1egy8mz3lp7ud9p8kcg8z","5gf8xb68r1y0kxumkvvmuez","d92qhaqtfbt7e4eximdnbht","r25bm5nuug9krur6ddqearm"],"parent":null,"data":{},"body":"\nMy personal knowledge cache using [Dendron](https://www.dendron.so)\n\n## History\nIt was during my first job, at the start-up company called PixelShift.AI, that I acquired most prominent skill as a software engineer-the ability to read source code. It opened up a new way of learning and my knowledge expanded rapidly ever since. Learning new things is thriving but noting them down cogently and organized is hard. I often found myself forget the context few month later, making the notes completely intelligible. Additionally, some notes need frequent update as my previous understanding could be parochial, antiquated or even erroneous.\n\nIn desperate attempt to facilitate the noting/updating experience, I came across [Dendron](https://www.dendron.so) and found it surprisingly congenial to my personal need. With it, I have gradually grown the habit of caching, linking back and extending my knowledge base.\n\n## Disclaimer\nThe notes are collections of information I found along the journey. I use backquote to denote sources, but I am likely to miss some references, so apology in advance. Also, they are my personal understandings, usually added when I first encounter the topic and will be updated only when I come across it again, so some of them could be incomplete or wrong."},"collectionChildren":null,"customHeadContent":null,"config":{"version":5,"dev":{"enablePreviewV2":true},"commands":{"lookup":{"note":{"selectionMode":"extract","confirmVaultOnCreate":false,"leaveTrace":false,"bubbleUpCreateNew":true,"fuzzThreshold":0.2,"vaultSelectionModeOnCreate":"smart"}},"randomNote":{},"insertNote":{"initialValue":"templates"},"insertNoteLink":{"aliasMode":"none","enableMultiSelect":false},"insertNoteIndex":{"enableMarker":false},"copyNoteLink":{},"templateHierarchy":"template"},"workspace":{"vaults":[{"fsPath":"vault"}],"journal":{"dailyDomain":"daily","name":"journal","dateFormat":"y.MM.dd","addBehavior":"childOfDomain"},"scratch":{"name":"scratch","dateFormat":"y.MM.dd.HHmmss","addBehavior":"asOwnDomain"},"task":{"name":"","dateFormat":"","addBehavior":"childOfCurrent","statusSymbols":{"":" ","wip":"w","done":"x","assigned":"a","moved":"m","blocked":"b","delegated":"l","dropped":"d","pending":"y"},"prioritySymbols":{"H":"high","M":"medium","L":"low"},"todoIntegration":false,"createTaskSelectionType":"selection2link","taskCompleteStatus":["done","x"]},"graph":{"zoomSpeed":1,"createStub":false},"enableAutoCreateOnDefinition":false,"enableXVaultWikiLink":false,"enableRemoteVaultInit":true,"enableUserTags":true,"enableHashTags":true,"workspaceVaultSyncMode":"noCommit","enableAutoFoldFrontmatter":false,"enableEditorDecorations":true,"maxPreviewsCached":10,"maxNoteLength":204800,"dendronVersion":"0.86.1","enableFullHierarchyNoteTitle":false,"enableHandlebarTemplates":false,"templateHierarchy":"template"},"preview":{"enableFMTitle":true,"enableNoteTitleForLink":true,"enableMermaid":true,"enablePrettyRefs":true,"enableKatex":true,"automaticallyShowPreview":false,"enableFrontmatterTags":true,"enableHashesForFMTags":false},"publishing":{"enableFMTitle":true,"enableNoteTitleForLink":true,"enableMermaid":true,"enablePrettyRefs":true,"enableKatex":true,"copyAssets":true,"siteHierarchies":["root"],"enableSiteLastModified":true,"siteRootDir":"docs","enableFrontmatterTags":true,"enableHashesForFMTags":false,"enableRandomlyColoredTags":true,"duplicateNoteBehavior":{"action":"useVault","payload":["vault"]},"writeStubs":false,"seo":{"title":"Dendron","description":"Personal knowledge space"},"github":{"enableEditLink":true,"editLinkText":"Edit this page on GitHub","editBranch":"main","editViewMode":"tree"},"enablePrettyLinks":true,"assetsPrefix":"/my-personal-knowledge-cache","siteUrl":"https://ankbzpx.github.io","enableTaskNotes":true,"siteFaviconPath":"favicon.ico","siteIndex":"root"}}},"__N_SSG":true}