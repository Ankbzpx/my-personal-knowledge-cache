{"pageProps":{"note":{"id":"Vn1Ykq4aIagi0bhZowkgD","title":"Ffmpeg","desc":"","updated":1644562844033,"created":1640017378204,"custom":{},"fname":"ffmpeg","type":"note","vault":{"fsPath":"vault"},"contentHash":"96558f91544e5b4b1dad36792659f02c","links":[],"anchors":{"scale-video-such-that-its-width-equal-to-720":{"type":"header","text":"Scale video such that its width equal to 720","value":"scale-video-such-that-its-width-equal-to-720","line":8,"column":0,"depth":2},"flip-video-upside-down":{"type":"header","text":"Flip video upside down","value":"flip-video-upside-down","line":12,"column":0,"depth":2},"extract-single-frame-as-an-image-at-given-timestamp":{"type":"header","text":"Extract single frame as an image at given timestamp","value":"extract-single-frame-as-an-image-at-given-timestamp","line":17,"column":0,"depth":2},"extract-all-frame-at-given-frame-rate":{"type":"header","text":"Extract all frame at given frame rate","value":"extract-all-frame-at-given-frame-rate","line":22,"column":0,"depth":2},"pad-video":{"type":"header","text":"Pad video","value":"pad-video","line":27,"column":0,"depth":2},"loop-video":{"type":"header","text":"Loop video","value":"loop-video","line":32,"column":0,"depth":2},"chain":{"type":"header","text":"Chain","value":"chain","line":37,"column":0,"depth":2},"complex-scenario":{"type":"header","text":"Complex scenario","value":"complex-scenario","line":44,"column":0,"depth":2},"example-1":{"type":"header","text":"Example 1","value":"example-1","line":46,"column":0,"depth":3},"example-2":{"type":"header","text":"Example 2","value":"example-2","line":54,"column":0,"depth":3}},"children":[],"parent":"o3PkEany5FTDLokev2jkJ","data":{}},"body":"<h1 id=\"ffmpeg\"><a aria-hidden=\"true\" class=\"anchor-heading\" href=\"#ffmpeg\"><svg aria-hidden=\"true\" viewBox=\"0 0 16 16\"><use xlink:href=\"#svg-link\"></use></svg></a>Ffmpeg</h1>\n<h2 id=\"scale-video-such-that-its-width-equal-to-720\"><a aria-hidden=\"true\" class=\"anchor-heading\" href=\"#scale-video-such-that-its-width-equal-to-720\"><svg aria-hidden=\"true\" viewBox=\"0 0 16 16\"><use xlink:href=\"#svg-link\"></use></svg></a>Scale video such that its width equal to 720</h2>\n<pre><code>for i in *.mp4; do ffmpeg -i \"$i\" -vf scale=720:-1 \"${i%.*}_720p.mp4\";done\n</code></pre>\n<h2 id=\"flip-video-upside-down\"><a aria-hidden=\"true\" class=\"anchor-heading\" href=\"#flip-video-upside-down\"><svg aria-hidden=\"true\" viewBox=\"0 0 16 16\"><use xlink:href=\"#svg-link\"></use></svg></a>Flip video upside down</h2>\n<pre><code>for i in *.mp4; do ffmpeg -i \"$i\" -vf \"transpose=2,transpose=2\" \"out/${i%.*}.mp4\";done\n</code></pre>\n<h2 id=\"extract-single-frame-as-an-image-at-given-timestamp\"><a aria-hidden=\"true\" class=\"anchor-heading\" href=\"#extract-single-frame-as-an-image-at-given-timestamp\"><svg aria-hidden=\"true\" viewBox=\"0 0 16 16\"><use xlink:href=\"#svg-link\"></use></svg></a>Extract single frame as an image at given timestamp</h2>\n<pre><code>ffmpeg -i DeskPortal_State_03_PC_1440p_Idle_SitAd_30fps_40534656.m2v -ss 00:00:11 -vframes 1 output.png\n</code></pre>\n<h2 id=\"extract-all-frame-at-given-frame-rate\"><a aria-hidden=\"true\" class=\"anchor-heading\" href=\"#extract-all-frame-at-given-frame-rate\"><svg aria-hidden=\"true\" viewBox=\"0 0 16 16\"><use xlink:href=\"#svg-link\"></use></svg></a>Extract all frame at given frame rate</h2>\n<pre><code>ffmpeg -i VID_20220126_151107.mp4 -r 4 images/frame%04d.png\n</code></pre>\n<h2 id=\"pad-video\"><a aria-hidden=\"true\" class=\"anchor-heading\" href=\"#pad-video\"><svg aria-hidden=\"true\" viewBox=\"0 0 16 16\"><use xlink:href=\"#svg-link\"></use></svg></a>Pad video</h2>\n<pre><code>ffmpeg -i tom_1080.mp4 -vf \"pad=width=1920:height=1080:x=(1920-1080)/2:y=0:color=white\" tom_pad.mp4\n</code></pre>\n<h2 id=\"loop-video\"><a aria-hidden=\"true\" class=\"anchor-heading\" href=\"#loop-video\"><svg aria-hidden=\"true\" viewBox=\"0 0 16 16\"><use xlink:href=\"#svg-link\"></use></svg></a>Loop video</h2>\n<pre><code>ffmpeg -stream_loop 2 -i tbrender.mp4 -c copy tbrender_loop.mp4\n</code></pre>\n<h2 id=\"chain\"><a aria-hidden=\"true\" class=\"anchor-heading\" href=\"#chain\"><svg aria-hidden=\"true\" viewBox=\"0 0 16 16\"><use xlink:href=\"#svg-link\"></use></svg></a>Chain</h2>\n<ol>\n<li><code>scale</code> video to <code>1080x1080</code></li>\n<li><code>pad</code> video to <code>1920x1080</code></li>\n</ol>\n<pre><code>ffmpeg -i tom.mp4 -vf \"scale=1080:1080,pad=1920:height=1080:x=(1920-iw)/2:y=(1080-ih)/2:color=white\" tom_pad_chain.mp4\n</code></pre>\n<h2 id=\"complex-scenario\"><a aria-hidden=\"true\" class=\"anchor-heading\" href=\"#complex-scenario\"><svg aria-hidden=\"true\" viewBox=\"0 0 16 16\"><use xlink:href=\"#svg-link\"></use></svg></a>Complex scenario</h2>\n<h3 id=\"example-1\"><a aria-hidden=\"true\" class=\"anchor-heading\" href=\"#example-1\"><svg aria-hidden=\"true\" viewBox=\"0 0 16 16\"><use xlink:href=\"#svg-link\"></use></svg></a>Example 1</h3>\n<ol>\n<li>green screen to transparent (similarity 0.1, blend 0.2)</li>\n<li>overlay</li>\n</ol>\n<pre><code>ffmpeg -i flower.mp4 -i women.mp4 -vcodec libx264 -filter_complex \"[0]chromakey=green:0.1:0.2[ia];[1][ia]overlay\" out.mp4\n</code></pre>\n<h3 id=\"example-2\"><a aria-hidden=\"true\" class=\"anchor-heading\" href=\"#example-2\"><svg aria-hidden=\"true\" viewBox=\"0 0 16 16\"><use xlink:href=\"#svg-link\"></use></svg></a>Example 2</h3>\n<ol>\n<li><code>alphamerge</code> first two video</li>\n<li>create pure white video with given resolution, framerate and format</li>\n<li>overlap alphamerged video with pure white for suration equal to shortest one</li>\n<li>crop video to <code>2240x1260</code> with upper left corner at <code>(160, 0)</code></li>\n</ol>\n<pre><code>for i in *_1.mpg; do\n  ffmpeg -i \"$i\" -i \"${i%_*}_2.mpg\" -vcodec libx264 -filter_complex \"[0][1]alphamerge[ia];color=white:s=2560x1440:rate=30[bg];[bg][ia]overlay=shortest=1,format=yuv420p[v];[v]crop=2240:1260:160:0\" \"${i%.usm_1.mpg}.mp4\"\ndone\n</code></pre>","noteIndex":{"id":"o3PkEany5FTDLokev2jkJ","title":"Root","desc":"","updated":1656832289330,"created":1640014633146,"custom":{"nav_order":0,"permalink":"/"},"fname":"root","type":"note","vault":{"fsPath":"vault"},"contentHash":"1f4a8dbd787743b10f24422968be02a9","links":[],"anchors":{"history":{"type":"header","text":"History","value":"history","line":10,"column":0,"depth":2},"disclaimer":{"type":"header","text":"Disclaimer","value":"disclaimer","line":15,"column":0,"depth":2}},"children":["Vn1Ykq4aIagi0bhZowkgD","ja5HFaIxVEtbZoTklNXfZ","vnzxfoqb6aqbrqy247uonqo","jjlv4wd30bvf0r680o9ptbi","kok8aerdrzko8v4i6w6qtjx","hr8ruqfxd2miwldyehzz5zy","criy8usqjrguecufwb3k8z2","3x9f9wclumzxc23dzgraepy","sma2hkp8hvq9urmtk94qqwq","4bcvwahaynsox941d8dimxw","8u19znq05xj50ptse0fq8nj","hbcft05imtwxxtwk52nij1n","2vmt81onv3jf06ejwfusj30","npuhs4xvm0sa31rz2gcuff3","mwt2mrjm58oa3q2osoqwd64","yjnf5fuac95jbdmjj923hyh","17p3nbv4rvga83hhsz2idzp","8r1egy8mz3lp7ud9p8kcg8z","5gf8xb68r1y0kxumkvvmuez","d92qhaqtfbt7e4eximdnbht","r25bm5nuug9krur6ddqearm"],"parent":null,"data":{},"body":"\nMy personal knowledge cache using [Dendron](https://www.dendron.so)\n\n## History\nIt was during my first job, at the start-up company called PixelShift.AI, that I acquired most prominent skill as a software engineer-the ability to read source code. It opened up a new way of learning and my knowledge expanded rapidly ever since. Learning new things is thriving but noting them down cogently and organized is hard. I often found myself forget the context few month later, making the notes completely intelligible. Additionally, some notes need frequent update as my previous understanding could be parochial, antiquated or even erroneous.\n\nIn desperate attempt to facilitate the noting/updating experience, I came across [Dendron](https://www.dendron.so) and found it surprisingly congenial to my personal need. With it, I have gradually grown the habit of caching, linking back and extending my knowledge base.\n\n## Disclaimer\nThe notes are collections of information I found along the journey. I use backquote to denote sources, but I am likely to miss some references, so apology in advance. Also, they are my personal understandings, usually added when I first encounter the topic and will be updated only when I come across it again, so some of them could be incomplete or wrong."},"collectionChildren":null,"customHeadContent":null,"config":{"version":5,"dev":{"enablePreviewV2":true},"commands":{"lookup":{"note":{"selectionMode":"extract","confirmVaultOnCreate":false,"leaveTrace":false,"bubbleUpCreateNew":true,"fuzzThreshold":0.2,"vaultSelectionModeOnCreate":"smart"}},"randomNote":{},"insertNote":{"initialValue":"templates"},"insertNoteLink":{"aliasMode":"none","enableMultiSelect":false},"insertNoteIndex":{"enableMarker":false},"copyNoteLink":{},"templateHierarchy":"template"},"workspace":{"vaults":[{"fsPath":"vault"}],"journal":{"dailyDomain":"daily","name":"journal","dateFormat":"y.MM.dd","addBehavior":"childOfDomain"},"scratch":{"name":"scratch","dateFormat":"y.MM.dd.HHmmss","addBehavior":"asOwnDomain"},"task":{"name":"","dateFormat":"","addBehavior":"childOfCurrent","statusSymbols":{"":" ","wip":"w","done":"x","assigned":"a","moved":"m","blocked":"b","delegated":"l","dropped":"d","pending":"y"},"prioritySymbols":{"H":"high","M":"medium","L":"low"},"todoIntegration":false,"createTaskSelectionType":"selection2link","taskCompleteStatus":["done","x"]},"graph":{"zoomSpeed":1,"createStub":false},"enableAutoCreateOnDefinition":false,"enableXVaultWikiLink":false,"enableRemoteVaultInit":true,"enableUserTags":true,"enableHashTags":true,"workspaceVaultSyncMode":"noCommit","enableAutoFoldFrontmatter":false,"enableEditorDecorations":true,"maxPreviewsCached":10,"maxNoteLength":204800,"dendronVersion":"0.86.1","enableFullHierarchyNoteTitle":false,"enableHandlebarTemplates":false,"templateHierarchy":"template"},"preview":{"enableFMTitle":true,"enableNoteTitleForLink":true,"enableMermaid":true,"enablePrettyRefs":true,"enableKatex":true,"automaticallyShowPreview":false,"enableFrontmatterTags":true,"enableHashesForFMTags":false},"publishing":{"enableFMTitle":true,"enableNoteTitleForLink":true,"enableMermaid":true,"enablePrettyRefs":true,"enableKatex":true,"copyAssets":true,"siteHierarchies":["root"],"enableSiteLastModified":true,"siteRootDir":"docs","enableFrontmatterTags":true,"enableHashesForFMTags":false,"enableRandomlyColoredTags":true,"duplicateNoteBehavior":{"action":"useVault","payload":["vault"]},"writeStubs":false,"seo":{"title":"Dendron","description":"Personal knowledge space"},"github":{"enableEditLink":true,"editLinkText":"Edit this page on GitHub","editBranch":"main","editViewMode":"tree"},"enablePrettyLinks":true,"assetsPrefix":"/my-personal-knowledge-cache","siteUrl":"https://ankbzpx.github.io","enableTaskNotes":true,"siteFaviconPath":"favicon.ico","siteIndex":"root"}}},"__N_SSG":true}